<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springprj.www.repository.tv.TVDAO">	
	<!-- tv -->
	<select id="selectOneTV" parameterType="long" resultType="tvvo">
		select * from tv where tvid = #{tvid}
	</select>
	
	<select id="selectUserLikedTVList" parameterType="string" resultType="tvvo">
		select t.*, l.reg_at reg_at, 
		(select count(email) from tv_like where email = l.email and tvid = l.tvid) isLiked,
		(select rating from tv_rating where email = l.email and tvid = l.tvid) rating
		from (select tvid, reg_at, email from tv_like where email = #{email}) l 
		left join tv t on l.tvid = t.tvid  
	</select>
	
	<select id="selectUserRatedTVList" parameterType="string" resultType="tvvo">
		select t.*, l.rating rating, 
		(select count(email) from tv_like where email = l.email and tvid = l.tvid) isLiked
		from (select tvid, rating, email from tv_rating where email = #{email}) l
		left join tv t on l.tvid = t.tvid		
	</select>
	
	<select id="selectUserReviewedTVList" parameterType="string" resultType="tvvo">
		select t.* , l.reg_at reg_at, 
		(select count(email) from tv_like where email = l.writer and tvid = l.tvid) isLiked,
		(select rating from tv_rating where email = l.writer and tvid = l.tvid) rating
		from (select tvid, reg_at, writer from tv_review where writer = #{email}) l
		left join tv t on l.tvid = t.tvid
	</select>
	
	<insert id="insertTVData" parameterType="tvvo">
		insert into tv(tvid, title
		<if test="poster != null">
		 , poster
		</if>
		<if test="genres != null">
		,genres
		</if>
		 )
		values(#{tvid}, #{title}
		<if test="poster != null">
		 , #{poster}
		</if>
		<if test="genres != null">
		,#{genres}
		</if>
		 )
	</insert>
	
		<!-- review -->
	<select id="selectListTVReview" parameterType="long" resultType="rvdto">
		select tr.tvid , tr.writer , tr.reg_at , tr.mod_at , tr.content , u.profile_img , u.font_color 
		from tv_review tr left join `user` u on tr.writer = u.email 
		where tvid = #{tvid}
	</select>
	
	<select id="selectOneTVReview"  resultType="rvdto">
		select tr.tvid , tr.writer , tr.reg_at , tr.mod_at , tr.content , u.profile_img , u.font_color 
		from tv_review tr left join `user` u on tr.writer = u.email 
		where tvid = #{tvid} and writer = #{writer} 
		
	</select>
	
	<insert id="insertTVReview" parameterType="rvvo">
		insert into tv_review(tvid, writer, content) values(#{tvid}, #{writer}, #{content})
	</insert>
	
	<update id="updateTVReview" parameterType="rvvo">
		update tv_review set content = #{content} , mod_at = now() where tvid = #{tvid} and writer = #{writer}
	</update>
	
	<delete id="deleteTVReview">
		delete from tv_review where tvid = #{tvid} and writer = #{writer}
	</delete>
	
	<!-- like -->
	<select id="selectTVLikeCount" parameterType="long" resultType="int">
		select count(email) likeCount from tv_like where tvid = #{tvid}
	</select>
	
	<select id="selectOneTVLike" resultType="int">
		select count(email) from tv_like where tvid = #{tvid} and email = #{email}
	</select>
	
	<insert id="insertTVLike" parameterType="lvo">
		insert into tv_like(tvid, email) values(#{tvid}, #{email})
	</insert>
	
	<delete id="deleteTVLike" >
		delete from tv_like where tvid = #{tvid} and email = #{email}
	</delete>
	
	<!-- rating -->
	<select id="selectTVAvgRating" resultType="double">
		select round(avg(rating), 1) avgRating from tv_rating where tvid = #{tvid}
	</select>
	
	<select id="selectOneTVRating" resultType="double">
		select rating from tv_rating where tvid = #{tvid} and email = #{email}
	</select>
	
	<insert id="insertTVRating" parameterType="rtvo">
		insert into tv_rating(tvid, email, rating) values(#{tvid}, #{email}, #{rating})
	</insert>
	
	<update id="updateTVRating" parameterType="rtvo">
		update tv_rating set rating = #{rating} where tvid = #{tvid} and email = #{email}
	</update>
	
	<delete id="deleteTVRating" >
		delete from tv_rating where tvid = #{tvid} and email = #{email}
	</delete>
	
	<!-- rank -->
	
	<select id="selectListLikeRankTV" resultType="tvvo">
		select t.tvid , t.title , t.poster , count(t.tvid) 'isLiked'
		from tv t left join tv_like tl on t.tvid = tl.tvid 
		group by t.tvid, t.title, t.poster
		ORDER BY count(t.tvid) desc
		limit 0, 10
	</select>
	
	<select id="selectListRatingRankTV" resultType="tvvo">
		SELECT t.tvid , t.title , t.poster , avg(tr.rating) 'rating'
		from tv t left join tv_rating tr on t.tvid = tr.tvid 
		GROUP BY t.tvid, t.title , t.poster
		ORDER BY AVG(tr.rating) DESC 
		limit 0, 10
	</select>
</mapper>